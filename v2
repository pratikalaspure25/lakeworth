public class SpanishProfitAndLossSaverJob implements Queueable {
	private String rawJson;
    private Id recordId;

    public SpanishProfitAndLossSaverJob(String rawJson, Id recordId) {
        this.rawJson  = rawJson;
        this.recordId = recordId;
    }

    public void execute(QueueableContext context) {
        // 1) No payload at all
        if (String.isBlank(rawJson)) {
            postToChatter(
                'P&L failed: no data received. Please upload a valid Profit & Loss document.'
            );
            return;
        }

        // 2) Top-level array
        List<Object> wrapperList = (List<Object>) JSON.deserializeUntyped(rawJson);
        if (wrapperList.isEmpty()) {
            postToChatter(
                'P&L failed: empty response. Please upload a valid Profit & Loss document.'
            );
            return;
        }

        // 3) Drill into the first action’s outputValues
        Map<String, Object> actionResp   = (Map<String, Object>) wrapperList[0];
        Map<String, Object> outputValues = (Map<String, Object>) actionResp.get('outputValues');
        if (outputValues == null
            || !outputValues.containsKey('ocrDocumentScanResultDetails')) {
            postToChatter(
                'P&L failed: no OCR details found. Please upload a clear Profit & Loss document.'
            );
            return;
        }

        // 4) Get the pages array
        Map<String, Object> detailsWrap = 
            (Map<String, Object>) outputValues.get('ocrDocumentScanResultDetails');
        List<Object> pages = 
            (List<Object>) detailsWrap.get('ocrDocumentScanResultDetails');

        if (pages == null || pages.isEmpty()) {
            postToChatter(
                'P&L failed: no pages detected. Please upload a valid Profit & Loss document.'
            );
            return;
        }

        // 5) Build a new Profit_and_Loss__c record
        Profit_and_Loss__c pl = new Profit_and_Loss__c();
        pl.Application__c = recordId;

        // 6) Your mapping logic, plus a counter
        Integer mappedCount = 0;
        for (Object pgObj : pages) {
            Map<String, Object> pageMap = (Map<String, Object>) pgObj;
            List<Object> kvps = (List<Object>) pageMap.get('keyValuePairs');
            if (kvps == null) continue;

            for (Object kvpObj : kvps) {
                Map<String, Object> pair     = (Map<String, Object>) kvpObj;
                Map<String, Object> keyMap   = (Map<String, Object>) pair.get('key');
                Map<String, Object> valueMap = (Map<String, Object>) pair.get('value');
                if (keyMap == null || valueMap == null) continue;

                String label = (String) keyMap.get('value');
                String text  = (String) valueMap.get('value');
                if (label == null || text == null) continue;

                String norm = label.replaceAll('[^a-zA-Z0-9]', '').toLowerCase();

                if (norm.contains('nombresdelprestatari')) {
                    pl.Borrower_Name_s__c = text;
                    mappedCount++;
                } else if (norm.contains('nombredelaempresa')) {
                    pl.Name = text;
                    mappedCount++;
                } else if (norm.contains('tipodenegocio')) {
                    pl.Type_of_Bussiness__c = text;
                    mappedCount++;
                } else if (norm.contains('nmerodeprstamo')) {
                    pl.Loan_Number__c = text;
                    mappedCount++;
                }
                // …any other fields you care about…
            }
        }

        // 7) If nothing mapped, we treat it as a “bad document”
        if (mappedCount == 0) {
            postToChatter(
                'P&L failed: no recognizable data detected. Please upload a valid Profit & Loss document.'
            );
            return;
        }

        // 8) Insert and catch any DML problems
        try {
            insert pl;
        } catch (DmlException e) {
            String msg = e.getMessage();
            if (msg.length() > 200) {
                msg = msg.substring(0, 200) + '…';
            }
            postToChatter(
                'Could not save Profit & Loss record: ' + msg
            );
        }
    }

    /**  
     * Posts a plain-text FeedItem under the LLC_BI_Application__c record’s feed  
     */
    private void postToChatter(String body) {
        ConnectApi.ChatterFeeds.postFeedElement(
            /* communityId */ null,
            /* subjectId   */ recordId,
            /* feedType    */ ConnectApi.FeedElementType.FeedItem,
            /* text        */ body
        );
    }
}
