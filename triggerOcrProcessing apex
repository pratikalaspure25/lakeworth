private String triggerOcrProcessing(Blob documentData) {
    try {
        Http http = new Http();
        HttpRequest request = new HttpRequest();

        // Salesforce REST API endpoint to initiate text extraction
        String endpointUrl = '/services/data/v58.0/actions/standard/initiateTextExtraction';
        
        // Prepare the request body as a JSON string
        String requestBody = JSON.serialize(new Map<String, Object>{
            'inputs' => new List<Map<String, Object>>{
                new Map<String, Object>{
                    'contentDocumentId' => contentDocumentId,  // Your uploaded document ID
                    'startPageIndex' => 1,  // Start from page 1
                    'endPageIndex' => 20,  // You can change this based on how many pages you want to extract
                    'ocrService' => 'AMAZON_TEXTRACT'  // Using the Textract OCR service
                    // Remove 'documentTypeId' if specifying 'ocrService'
                }
            }
        });

        // Set up the HTTP request
        request.setEndpoint(URL.getSalesforceBaseUrl().toExternalForm() + endpointUrl);  // Combine Salesforce base URL with the endpoint
        request.setMethod('POST');
        request.setHeader('Content-Type', 'application/json');
        request.setHeader('Authorization', 'Bearer ' + UserInfo.getSessionId());  // Use the session ID for authorization
        request.setBody(requestBody);

        // Send the HTTP request
        HttpResponse response = http.send(request);

        // Handle the response
        if (response.getStatusCode() == 200) {
            System.debug('OCR API response: ' + response.getBody());
            // Extract the OCR result from the response
            Map<String, Object> responseMap = (Map<String, Object>) JSON.deserializeUntyped(response.getBody());
            List<Map<String, Object>> ocrResults = (List<Map<String, Object>>) responseMap.get('ocrDocumentScanResultDetails');
            
            // Extract the ocrDocumentScanResultId for each page
            for (Map<String, Object> result : ocrResults) {
                String ocrResultId = (String) result.get('ocrDocumentScanResultId');
                System.debug('OCR Result ID: ' + ocrResultId);
            }

            // Return the OCR result ID or response for further processing
            return response.getBody();
        } else {
            System.debug('Error calling OCR API, status: ' + response.getStatus() + ', body: ' + response.getBody());
            return null;
        }
    } catch (Exception ex) {
        System.debug('Exception during OCR processing: ' + ex.getMessage());
        return null;
    }
}
